# Stage 1: Build the Spring Boot JAR
FROM maven:3.9.5-eclipse-temurin-17 AS builder
WORKDIR /app
COPY . .
RUN mvn clean package -DskipTests


# Stage 2: Runtime with Ubuntu + OpenJDK 17 + Docker (DinD)
FROM ubuntu:22.04

# Install necessary packages
RUN apt-get update && \
    apt-get install -y openjdk-17-jdk curl unzip gnupg lsb-release iptables ca-certificates \
    apt-transport-https software-properties-common

# Install Docker CLI & daemon
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
        > /etc/apt/sources.list.d/docker.list && \
    apt-get update && \
    apt-get install -y docker-ce docker-ce-cli containerd.io

# Clean up cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Set environment
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV PATH=$PATH:$JAVA_HOME/bin

# Work directory
WORKDIR /app

# Copy the built jar from previous stage
COPY --from=builder /app/target/*.jar app.jar

# Expose Spring Boot and Docker TCP port (if using remote)
EXPOSE 8087
EXPOSE 2375

# Start Docker daemon and app
CMD ["sh", "-c", "dockerd & sleep 5 && java -jar app.jar"]
